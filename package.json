{
  "name": "qcobjectsnewapp",
  "version": "2.4.37",
  "description": "App template for New App in QCObjects",
  "targets": {
    "default": {
      "source": "build/index.html",
      "distDir": "public"
    }
  },
  "main": "public/js/init.js",
  "type": "commonjs",
  "types": "src/**/*.d.ts",
  "browserslist": "> 0.5%, last 2 versions, not dead",
  "watch": {
    "start": {
      "patterns": [
        "src"
      ],
      "extensions": "ts,html,css",
      "quiet": true,
      "legacyWatch": true,
      "delay": 2500,
      "runOnChangeOnly": false
    }
  },
  "scripts": {
    "test": "(npm run lint && (npx jasmine))",
    "lint": "(npx eslint \"src/**/*.ts\" --fix --ext ts)",
    "sync": "git add . && git commit -am ",
    "preversion": "npm i --upgrade && npm test",
    "postversion": "git push && git push --tags",
    "coverage": "nyc --reporter=lcov --reporter=text-summary npm run test",
    "start": "npm run createcert && npm run serve",
    "start:parcel": "npx parcel --dist-dir public",
    "serve": "qcobjects-server",
    "server": "npm run serve",
    "collab": "qcobjects-collab",
    "shell": "qcobjects shell",
    "createcert": "qcobjects-createcert",
    "v-patch": "qcobjects v-patch",
    "v-minor": "qcobjects v-minor",
    "v-major": "qcobjects v-major",
    "qcobjects": "qcobjects",
    "cli": "qcobjects",
    "http-server": "qcobjects-http-server",
    "gae-server": "qcobjects-gae-server",
    "azure-server": "npm start",
    "aws-server": "npm start",
    "do-server": "npm start",
    "minify:css": "(npx esbuild build/css/*.css build/css/**/*.css --outdir=public/css --keep-names --minify --global-name=global --sourcemap --loader:.svg=file --target=es2021)",
    "build:docker": "docker build -t qcobjects/qcobjects-newapp:latest .",
    "build:static": "npx qcobjects-cli publish:static src/ build/ --exclude js --exclude=.DS_Store",
    "build:ts": "npm test && npx tsc",
    "build:ts-types": "npx tsc --project tsconfig.d.json",
    "build:netlify": "npm run publish:web",
    "build": "npm run publish:web",
    "publish:static": "(npx qcobjects-cli publish:static build/ public/ --exclude js --exclude=.DS_Store) && npm run minify:css",
    "publish:ios": "qcobjects publish ios",
    "publish:android": "qcobjects publish android",
    "publish:electron": "qcobjects publish electron",
    "publish:esbuild": "npx esbuild build/js/*.js build/js/**/*.js --bundle --outdir=public/js --keep-names --minify --global-name=global --sourcemap --splitting --chunk-names=chunks/[name]-[hash] --format=esm --target=es2021",
    "publish:parcel": "npx parcel build",
    "publish:web": "npm run build:static && npm run build:ts && npm run publish:static && npm run publish:esbuild && npm run generate-sw",
    "publish:docker": "docker push qcobjects/qcobjects-newapp:latest",
    "deploy:docker": "npm run build:docker && npm run publish:docker",
    "docker-server": "docker run -p 8080:8080 -p 8443:8443 -d --name qcobjects-newapp qcobjects/qcobjects-newapp",
    "prepare": "node -e \"if(!require('fs').existsSync('.git')){process.exit(0)}\" || npx -y husky install",
    "prestart": "npm run publish:web",
    "cli:help": "qcobjects --help",
    "start:dev": "npm-watch start",
    "build:dev": "npm-watch build",
    "tree": "tree -d --gitignore",
    "lighthouse": "lighthouse https://127.0.0.1:8443/ --quiet --chrome-flags=\"--ignore-certificate-errors\" --budget-path=./lighthouse-budget.json --output html --output-path ./lighthouse/lighthouse-report.html --view",
    "generate-sw": "npx qcobjects generate-sw qcobjectsnewapp -d public"
  },
  "repository": {
    "type": "file",
    "url": "https://github.com/QuickCorp/qcobjects-new-app.git"
  },
  "keywords": [
    "qcobjects",
    "newapp",
    "js",
    "javascript"
  ],
  "author": "Jean Machuca (correojean@gmail.com)",
  "license": "LGPL-3.0-or-later",
  "devDependencies": {
    "@types/qcobjects": "github:QCObjects/-types-qcobjects",
    "@types/qcobjects-sdk": "github:QCObjects/-types-qcobjects-sdk",
    "@typescript-eslint/eslint-plugin": "^5.59.11",
    "@typescript-eslint/parser": "^5.58.0",
    "eslint": "^8.39.0",
    "eslint-config-prettier": "^8.8.0",
    "eslint-config-qcobjects": "^0.0.26",
    "eslint-config-qcobjects-typescript": "^2.4.5",
    "eslint-config-semistandard": "^17.0.0",
    "eslint-config-standard": "^17.0.0",
    "eslint-config-standard-with-typescript": "^34.0.1",
    "eslint-plugin-import": "^2.27.5",
    "eslint-plugin-n": "^15.7.0",
    "eslint-plugin-promise": "^6.1.1",
    "hint": "^2.0.0",
    "husky": "^8.0.3",
    "jasmine": "^3.99.0",
    "lighthouse": "^12.1.0",
    "lint-staged": "^13.2.1",
    "qcobjects-cli": "^2.4.65",
    "qcobjects-tsconfig": "^2.4.10",
    "semistandard": "^16.0.1",
    "typescript": "^5.0.4"
  },
  "dependencies": {
    "grunt": "^1.4.1",
    "grunt-contrib-jasmine": "^4.0.0",
    "npm-watch": "^0.11.0",
    "nyc": "^15.1.0",
    "qcobjects": "^2.4.95",
    "qcobjects-admin": "^1.0.0",
    "qcobjects-command-publish-static": "^1.0.4",
    "qcobjects-sdk": "^2.4.64"
  },
  "engines": {
    "npm": ">=8",
    "node": ">=16"
  },
  "lint-staged": {
    "**/*": "prettier --write --ignore-unknown"
  }
}
